<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>PHP小菜鸟</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-07-06T01:52:20.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数组学习</title>
    <link href="http://yoursite.com/2020/07/23/%E6%95%B0%E7%BB%84%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2020/07/23/%E6%95%B0%E7%BB%84%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-07-23T08:42:55.865Z</published>
    <updated>2020-07-06T01:52:20.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数组学习"><a href="#数组学习" class="headerlink" title="数组学习"></a>数组学习</h2><h3 id="数组的概念："><a href="#数组的概念：" class="headerlink" title="数组的概念："></a>数组的概念：</h3><p>数组：array，数据结合，指将一组数据(多个)存储到一个指定的容器中，用变量指向该容器，然后可以通过变量一次性得到该容器的所有数据</p><h3 id="数组定义语法："><a href="#数组定义语法：" class="headerlink" title="数组定义语法："></a>数组定义语法：</h3><p>在PHP中系统提供多种定义数组的方式：</p><h4 id="一、使用array关键字：最常用的"><a href="#一、使用array关键字：最常用的" class="headerlink" title="一、使用array关键字：最常用的"></a>一、使用array关键字：最常用的</h4><blockquote><p>$变量 = array元素(1,元素 2,元素 3…)；hui</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $arr1 = <span class="keyword">array</span>(<span class="string">'1'</span>,<span class="number">2</span>,<span class="string">'hello'</span>);</span><br><span class="line">var_dump($arr1);</span><br></pre></td></tr></table></figure><p><img src="C:%5CUsers%5Chqqqq%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200630155813891.png" alt="image-20200630155813891"></p><h4 id="二、可以使用中括号包裹数据："><a href="#二、可以使用中括号包裹数据：" class="headerlink" title="二、可以使用中括号包裹数据："></a>二、可以使用中括号包裹数据：</h4><blockquote><p>$变量 = [元素1,元素2…]</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $arr2 = [<span class="string">'1'</span>,<span class="number">2</span>,<span class="string">'hello'</span>];</span><br><span class="line">var_dump($arr2);</span><br></pre></td></tr></table></figure><p><img src="C:%5CUsers%5Chqqqq%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200630194946837.png" alt="image-20200630194946837"></p><h4 id="三、隐形定义数组：给变量增加一个中括号，系统自动变成数组"><a href="#三、隐形定义数组：给变量增加一个中括号，系统自动变成数组" class="headerlink" title="三、隐形定义数组：给变量增加一个中括号，系统自动变成数组"></a>三、隐形定义数组：给变量增加一个中括号，系统自动变成数组</h4><blockquote><p>$变量[] = 值1；    //如果不提供下标也可以，系统自动生成(数字：从0开始)</p><p>$变量[下标] = 值； //中括号里面的内容称之为下标key，该下标可以是字母(单词)或者数字，与变量命名的规则相似</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$arr3[] = <span class="number">1</span>;</span><br><span class="line">$arr3[<span class="number">10</span>] = <span class="number">100</span>;</span><br><span class="line">$arr3[] = <span class="string">'1'</span>;</span><br><span class="line">$arr3[<span class="string">'key'</span>] = <span class="string">'key'</span>;</span><br><span class="line">var_dump($arr3);</span><br></pre></td></tr></table></figure><p><img src="C:%5CUsers%5Chqqqq%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200630195810868.png" alt="image-20200630195810868"></p><h3 id="PHP数组特点"><a href="#PHP数组特点" class="headerlink" title="PHP数组特点"></a>PHP数组特点</h3><h4 id="1-可以整数下标或者字符串下标"><a href="#1-可以整数下标或者字符串下标" class="headerlink" title="1)    可以整数下标或者字符串下标"></a>1)    可以整数下标或者字符串下标</h4><blockquote><p>如果数组下标都为整数：索引数组</p><p>如果数组下标都为字符串：关联数组</p></blockquote><h4 id="2-不同下标可以混合存在：混合数组"><a href="#2-不同下标可以混合存在：混合数组" class="headerlink" title="2)    不同下标可以混合存在：混合数组"></a>2)    不同下标可以混合存在：混合数组</h4><h4 id="3-数组元素的顺序以放入顺序为准，跟下标无关"><a href="#3-数组元素的顺序以放入顺序为准，跟下标无关" class="headerlink" title="3)    数组元素的顺序以放入顺序为准，跟下标无关"></a>3)    数组元素的顺序以放入顺序为准，跟下标无关</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$arr3[<span class="number">1</span>] = <span class="string">'value'</span>;</span><br><span class="line">var_dump($arr3);</span><br></pre></td></tr></table></figure><p><img src="C:%5CUsers%5Chqqqq%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200630201203739.png" alt="image-20200630201203739"></p><h4 id="4-数字下标的自增长特性"><a href="#4-数字下标的自增长特性" class="headerlink" title="4)    数字下标的自增长特性"></a>4)    数字下标的自增长特性</h4><p>从0开始自动增长，如果中间手动出现较大的，那么后面的自增元素从最大的值+1开始</p><h4 id="5-特殊值下标的自动转换"><a href="#5-特殊值下标的自动转换" class="headerlink" title="5)    特殊值下标的自动转换"></a>5)    特殊值下标的自动转换</h4><blockquote><p>布尔值：true和false</p><p>空：NULL</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">     $arr4[<span class="keyword">false</span>] = <span class="keyword">false</span>;</span><br><span class="line">$arr4[<span class="keyword">true</span>] = <span class="keyword">true</span>;</span><br><span class="line">$arr4[<span class="keyword">NULL</span>] = <span class="keyword">NULL</span>;</span><br><span class="line">var_dump($arr4);</span><br></pre></td></tr></table></figure><p><img src="C:%5CUsers%5Chqqqq%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200630202506278.png" alt="image-20200630202506278"></p><h4 id="6-PHP中数组元素没有类型限制"><a href="#6-PHP中数组元素没有类型限制" class="headerlink" title="6)    PHP中数组元素没有类型限制"></a>6)    PHP中数组元素没有类型限制</h4><h4 id="7-PHP中数组元素没有长度限制"><a href="#7-PHP中数组元素没有长度限制" class="headerlink" title="7)    PHP中数组元素没有长度限制"></a>7)    PHP中数组元素没有长度限制</h4><p>补充：PHP中的数组是很大的数据，所有存储位置是堆区，为当前数组分配一块连续的内存</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;数组学习&quot;&gt;&lt;a href=&quot;#数组学习&quot; class=&quot;headerlink&quot; title=&quot;数组学习&quot;&gt;&lt;/a&gt;数组学习&lt;/h2&gt;&lt;h3 id=&quot;数组的概念：&quot;&gt;&lt;a href=&quot;#数组的概念：&quot; class=&quot;headerlink&quot; title=&quot;数组的概念
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>world</title>
    <link href="http://yoursite.com/2020/07/23/world/"/>
    <id>http://yoursite.com/2020/07/23/world/</id>
    <published>2020-07-23T08:27:35.000Z</published>
    <updated>2020-07-23T08:27:35.997Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
</feed>
